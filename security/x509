#!/usr/bin/env bash
# x509 - dump information on an X.509 certificate

. lib.bash || exit

if have certtool; then
	use='certtool'
elif have openssl; then
	use='openssl'
else
	die "no GnuTLS or OpenSSL tools present"
fi

while getopts ':go' OPT; do
	case $OPT in
	g) use='certtool';;
	o) use='openssl';;
	*) lib::die_getopts;;
	esac
done; shift $((OPTIND-1))

if (( ! $# )); then
	set -- /dev/stdin
fi

unset temp

for file; do
	debug "processing '$file'"
	if [[ "$file" == "-" || "$file" == "/dev/stdin" ]]; then
		if [[ ! "$temp" ]]; then
			temp=$(mktemp "/tmp/x509_XXXXXXXX")
		fi
		debug "- copying stdin to temporary file"
		cat > "$temp"
		file="$temp"
	fi

	der=0
	if [[ "$(head -c 2 "$file")" == $'\x30\x82' ]]; then
		debug "- is probably in DER format"
		der=1
	fi

	unset arg
	case $use in
	'certtool')
		if (( der )); then
			arg="--inder"
		fi
		debug "- calling 'certtool${arg:+ }$arg'"
		certtool $arg -i < "$file" |
			sed -r '/^-----BEGIN/,/^-----END/d;
			/^\t*([0-9a-f][0-9a-f]:)+[0-9a-f][0-9a-f]$/d;
			/^\t.*random art:$/,/^\t\t\+-+\+$/d' |
			if [ -t 1 ];
			then sed $'/^X\.509 Certificate/ s/.*/\e[1m&\e[m/'
			else cat
			fi
		;;
	'openssl')
		if (( der )); then
			arg="-inform DER"
		fi
		debug "- calling 'openssl x509${arg:+ }$arg'"
		openssl x509 -noout -text -certopt no_sigdump $arg < "$file" |
			if [ -t 1 ];
			then sed $'/^Certificate/ s/.*/\e[1m&\e[m/'
			else cat
			fi
		;;
	esac
done

if [[ "$temp" ]]; then
	debug "removing temp file '$temp'"
	rm -f "$temp"
fi
