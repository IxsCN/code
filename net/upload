#!/usr/bin/env bash

. lib.bash || exit
. libkitchensink.bash || exit

usage() {
	echo "Usage: $progname [-01c] [-d <subdir>] <file>…"
	echo #|---'---|---'---|
	echo "  -0            do not use yearly subdirectories"
	echo "  -1            upload to fs1 instead of main site"
	echo "  -c            continue upload / overwrite file"
	echo "  -d path       create a subdirectory"
	echo "  -s regex      mangle (sed) the destination filename"
}

rtest() {
	local test=$1 host=${2%%:*} path=${2#*:}
	ks:sshrun "$host" test $test "$path"
}

rmkdir() {
	local host=${1%%:*} path=${1#*:}
	ks:sshrun "$host" mkdir -p "$path"
}

year=$(date +%Y)

fsbase="virgule:nullroute/tmp"
urlbase="https://nullroute.eu.org/tmp"

fs1_fsbase="ukradius:pub/fs1/tmp"
fs1_urlbase="http://fs1.nullroute.eu.org/tmp"

fs2_fsbase="ns228507:pub/fs2/tmp"
fs2_urlbase="http://fs2.nullroute.eu.org/tmp"

# parse command line

arg_mangle=
arg_server=
arg_subdir=
arg_yearly=1
arg_clobber=0

while getopts ":01cd:s:" OPT; do
	case $OPT in
	0) arg_yearly=0;;
	1) arg_server=fs1;;
	c) arg_clobber=1;;
	d) arg_subdir=$OPTARG;;
	s) arg_mangle=$OPTARG;;
	*) die_getopts;;
	esac
done; shift $((OPTIND-1))

if [[ $arg_server ]]; then
	_fsbase="${arg_server}_fsbase"
	_urlbase="${arg_server}_urlbase"
	if [[ ${!_fsbase} && ${!_urlbase} ]]; then
		fsbase=${!_fsbase}
		urlbase=${!_urlbase}
		trace "uploading to '$fsbase'"
	else
		die "unknown server '$arg_server'"
	fi
fi

if (( arg_yearly )); then
	fsbase+="/$year"
	urlbase+="/$year"
fi

if [[ $arg_subdir ]]; then
	fsbase+="/$arg_subdir"
	urlbase+="/$arg_subdir"
fi

debug "base dir: '$fsbase'"
debug "base url: '$urlbase'"

# prepare upload target

if [[ $arg_server || $arg_subdir ]]; then
	# $arg_server is a hack, until I copy rotate-up.sh to all other servers
	rmkdir "$fsbase"
fi

# upload files

clip=()

for arg; do
	if [[ ! -f $arg ]]; then
		err "'$arg' is not a file"
	elif [[ ! -s $arg ]]; then
		warn "'$arg' is empty, skipping"
	else
		source=$(readlink -f "$arg")
		name=${arg##*/}
		if [[ $arg_mangle ]]; then
			name=$(echo "$name" | sed -r "$arg_mangle")
		fi
		target="$fsbase/$name"
		if (( ! arg_clobber )) && rtest -s "$target"; then
			die "file '$target' already exists"
		fi
		debug "* source: '$source'"
		debug "  target: '$target'"
		rsync -Ps "$source" "$target"
		echo "$name → $urlbase/$name"
		clip+=("$urlbase/$name")
	fi
done

if [[ "$DISPLAY" ]] && (( ${#clip[@]} )); then
    echo -n "${clip[*]}" | xsel -i -b
fi

(( !errors ))
