#!/usr/bin/env perl
use bignum;
use open qw(:std :utf8);
use strict;
use warnings;
use Data::Dumper;
use JSON;
use List::Util;
use Net::Twitter::Lite::WithAPIv1_1;
use Nullroute::Lib;
use YAML::Syck;

sub get_filename {
	my ($name) = @_;

	$ENV{HOME}."/Backup/Personal/Twitter".($name ? "-".$name : "").".json";
}

our $twitter;

sub load_secrets {
	open(my $fh, "<", $ENV{HOME}."/.trc");
	my $conf = Load(eval {local $/; <$fh>});
	close($fh);

	my ($user, $key) = @{$conf->{configuration}{default_profile}};
	my $profile = $conf->{profiles}{$user}{$key};

	return (username	=> $user,
		consumer_key	=> $key,
		consumer_secret	=> $profile->{consumer_secret},
		access_token	=> $profile->{token},
		access_secret	=> $profile->{secret});
}

sub init_api {
	my %secrets = load_secrets();

	$twitter = Net::Twitter::Lite::WithAPIv1_1->new(
			ssl		=> 1,
			wrap_result	=> 1,
			username	=> $secrets{username},
			consumer_key	=> $secrets{consumer_key},
			consumer_secret	=> $secrets{consumer_secret});

	$twitter->access_token($secrets{access_token});
	$twitter->access_token_secret($secrets{access_secret});

	return $twitter;
}

sub load_tweets {
	my ($name) = @_;

	my $file = get_filename($name);
	my $data;
	if (open(my $f, "<", $file)) {
		$data = eval {local $/; <$f>};
		close($f);
	} elsif ($!{ENOENT}) {
		_debug("couldn't open tweet file for reading: $!");
		return undef;
	} else {
		_err("couldn't open tweet file for reading: $!");
	}
	my $tweets = JSON->new->decode($data);
	_log("loaded ".scalar(@$tweets)." tweets from $file");

	return $tweets;
}

$twitter = init_api();
my $tweets = load_tweets();

for my $t (@$tweets) {
	next if $t->{retweeted} || $t->{retweeted_status};
	next if $t->{favorited};
	next if $t->{retweet_count};
	next if !$t->{favorite_count};
	next if $t->{id_str} eq "582774902245183488";

	print "=== ", $t->{id}, " ===\n", $t->{text}, "\n";
	my $ok = 0;
	until ($ok) {
		eval {$twitter->destroy_status($t->{id})};
		if ($@) {
			if ($@->code == 404) {
				print "-> already gone\n"; $ok = 1;
			}
			elsif ($@->code == 403) {
				print "-> forbidden\n"; $ok = 1;
			}
			else {
				die "HTTP ".$@->code." ".$@->message."\n";
			}
		} else {
			print "-> gone!\n";
			$ok = 1;
		}
	}
}
