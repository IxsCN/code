#!/usr/bin/env python3
import ipaddress
import json
from nullroute.core import Core
import socket
import subprocess
import sys

def enum_proc(cmd, via=None):
    via = via or []
    with subprocess.Popen([*via, "zerotier-cli", "-j", cmd],
                          stdout=subprocess.PIPE) as proc:
        return json.loads(proc.stdout.read().decode())

def get_ptr(domain):
    with subprocess.Popen(["dig", "+short", "-t", "PTR", domain],
                          stdout=subprocess.PIPE) as proc:
        return proc.stdout.read().decode().strip() or None

def get_peer_name(peer_id, ptr_domain=""):
    ptr = get_ptr("%s.%s" % (peer_id, ptr_domain))
    if ptr:
        return ptr.split(".")[0]

def get_ip_hostname(addr):
    (cname, service) = socket.getnameinfo((addr, 0), 0)
    return cname

controllers = {
    "12ac4a1e71",
    "17d709436c",
    "565799d8f6",
    "6ab565387a",
    "8056c2e21c",
    "8850338390",
    "8bd5124fd6",
    "93afae5963",
    "9f77fc393e",
    "a09acf0233",
    "a84ac5c10a",
    "c7c8172af1",
    "e4da7455b2",
    "e5cd7a9e1c",
    "ea9349aa9c",
}

hide_roots = True
ptr_domain = "zt1.nullroute.eu.org"

args = sys.argv[1:]
if args and args[0] == "-v":
    args.pop(0)
    hide_roots = False

for peer in enum_proc("listpeers", via=args):
    peer_id = peer["address"]
    peer_name = get_peer_name(peer_id, ptr_domain)
    latency = peer["latency"]
    role = peer["role"]

    if hide_roots:
        if peer_name:
            pass
        elif peer_id in controllers:
            continue
        elif role in {"ROOT", "PLANET"}:
            continue
        else:
            continue

    if peer_name:
        fmt_name = "\033[1;38;5;76m%s\033[m" % peer_name
    elif peer_id in controllers:
        fmt_name = "\033[38;5;75m%s\033[m" % "<Controller>"
    elif role in {"ROOT", "PLANET"}:
        fmt_name = "\033[38;5;66m%s\033[m" % "<Relay>"
    else:
        fmt_name = "\033[38;5;209m%s\033[m" % "<Unknown>"

    fmt_addr = "\033[1;38;5;102m%s\033[m" % peer_id

    print("%s - %s (%s, %s ms)" % (fmt_addr, fmt_name, role.lower(), latency))

    for path in peer["paths"]:
        addr = path["address"]
        active = path["active"]
        pref = path["preferred"]
        if path["preferred"]:
            fmt_pref = "\033[38;5;154m%s\033[m" % "prefer"
        elif path["active"]:
            fmt_pref = "\033[38;5;76m%s\033[m" % "active"
        else:
            fmt_pref = "\033[38;5;244m%s\033[m" % "backup"
        char = "%" if pref else "+" if active else "-"
        host, port = addr.rsplit("/", 1)
        host = str(ipaddress.ip_address(host))
        fqdn = get_ip_hostname(host)
        print("  %s - %s port %s (%s)" % (fmt_pref, host, port, fqdn))
