#!/usr/bin/env perl
use warnings;
use strict;
use Getopt::Long qw(:config bundling no_ignore_case);
use MIME::Base64;
use Nullroute::Lib;

# https://freedesktop.org/wiki/CommonExtendedAttributes/

my %ALIAS_ATTRS = (
	comment  => "user.xdg.comment",
	lang     => "user.xdg.language",
	origin   => "user.xdg.origin.url",
	mime     => "user.mime_type",
	mimetype => "user.mime_type",
	referer  => "user.xdg.referrer.url",
);

my %HIDE_ATTRS = (
	"user.com.dropbox.attributes" => 1,
);

my %Opt;

sub _system {
	my (@args) = @_;
	_debug("running: @args");
	system {$args[0]} @args;
}

sub safe_val {
	my ($str) = @_;
	if (utf8::is_utf8($str) || utf8::decode($str)) {
		return "\"$str\"";
	} else {
		return "{".encode_base64($str, "")."}";
	}
}

sub set_attrs {
	my ($key, $val, @files) = @_;
	my $ret = _system("setfattr", "-n", $key, "-v", $val, "--", @files);
	return ($ret > 0);
}

sub unset_attrs {
	my ($key, @files) = @_;
	my $ret = _system("setfattr", "-x", $key, "--", @files);
	return ($ret > 0);
}

sub dump_attrs {
	my (@files) = @_;
	my $ret = 0;
	if (eval {require Linux::UserXAttr}) {
		for my $file (@files) {
			my @keys = Linux::UserXAttr::listxattr($file);
			if ($!) {
				_err("cannot read attrs of '$file': $!");
				++$ret; next;
			}
			@keys = grep {/^user\./} @keys unless $Opt{all};
			@keys = grep {!$HIDE_ATTRS{$_}} @keys;
			next if !@keys;
			print "\e[1m".$file."\e[m\n";
			for my $key (sort @keys) {
				my $val = Linux::UserXAttr::getxattr($file, $key);
				$key =~ s/^user\.// unless $Opt{all};
				print "  ".$key." = ".safe_val($val)."\n";
			}
			print "\n";
		}
	} else {
		$ret = _system("getfattr",
				"--absolute-names",
				"-m", $Opt{all} ? "-" : "^user\\.",
				"-d",
				@files);
	}
	return ($ret > 0);
}

GetOptions(
	"a|all" => \$Opt{all},
);

my %attrs;
my @files;

my $attr_re = qr|[^/?=]+|;

for (@ARGV) {
	if (-e $_ || -l $_) {
		push @files, $_;
	}
	elsif (/^($attr_re)=(.*)$/) {
		my ($key, $val) = ($1, $2);
		if ($ALIAS_ATTRS{$key}) {
			$key = $ALIAS_ATTRS{$key};
		} elsif ($key =~ /^\./) {
			$key =~ s///;
		} elsif ($key !~ /^(user|system|security|trusted)\./) {
			$key = "user.".$key;
		}
		$attrs{$key} = $val;
	}
	else {
		push @files, $_;
	}
}

if (!@files) {
	_die("no files specified");
}

my $exit = 0;

if (%attrs) {
	for my $key (keys %attrs) {
		my $val = $attrs{$key};
		if (length $val) {
			_debug("setting '$key' to '$val'");
			$exit |= set_attrs($key, $val, @files);
		} else {
			_debug("removing '$key'");
			$exit |= unset_attrs($key, @files);
		}
	}
} else {
	$exit |= dump_attrs(@files);
}

exit $exit;
