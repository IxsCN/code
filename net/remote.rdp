#!/usr/bin/env bash

. lib.bash     || exit
. libcred.bash || exit

arg_fork=0
use_rdesktop=0
arg_console=0
arg_vm_id=

if [[ $1 != -* ]]; then
	host=$1; shift
fi

while getopts ":aFfRu:V:" OPT; do
	case $OPT in
	a) arg_console=1;;
	F) use_rdesktop=0;;
	f) arg_fork=1;;
	R) use_rdesktop=1;;
	u) user=$OPTARG;;
	V) arg_vm_id=$OPTARG;;
	*) die_getopts;;
	esac
done; shift $((OPTIND-1))

if [[ ! $host ]]; then
	host=$1; shift
fi

[[ $host ]] || die "missing host name"

if (( use_rdesktop )); then
	export KRB5CCNAME=MEMORY:
	if [[ $DISPLAY ]]; then
		args=(rdesktop)
	else
		die "no graphical display available"
	fi
	args+=(
		-T "Remote Desktop: $host"
		-N	# numlock sync
		-P	# persistent bitmap cache
		-z	# RDP compression
		-r disk:"pub=/pub"
		-r disk:"home=$HOME"
		-r disk:"media=/run/media/$USER"
		-r sound:local:libao
		-r clipboard:CLIPBOARD
		-D	# undecorated
		-g "workarea"
		#-x m	# experience: modem
		#-a 8	# color depth
		#-x l	# experience: LAN
		-a 24
		-x 0x80
	     )
	if (( arg_console )); then
		args+=(-0)
	fi
	if [[ $arg_vm_id ]]; then
		die "rdesktop does not support Hyper-V console"
	fi
	args+=("$host" "$@")
else
	dir=~/.local/FreeRDP/bin
	[[ -d $dir ]] || dir=/usr/bin
	if [[ $WAYLAND_DISPLAY ]] && [[ -x $dir/wlfreerdp ]]; then
		args=($dir/wlfreerdp)
	elif [[ $DISPLAY ]]; then
		args=($dir/xfreerdp)
	else
		die "no graphical display available"
	fi
	args+=(
		/t:"Remote Desktop: $host"
		/bpp:32
		-decorations
		/workarea

		#-grab-keyboard
		#-mouse-motion
		#-fast-path

		+credentials-delegation
		/cert-ignore

		+fonts
		+aero
		+window-drag
		+wallpaper
		#/gfx
		#+gfx-progressive
		#+gfx-h264

		/drive:"pub,/pub"
		/drive:"media,/run/media/$USER"
		+home-drive
		+clipboard

		+auto-reconnect
		+heartbeat
		# [results in slow-ish tsdiscon]
		#+multitransport
	     )
	if (( arg_console )); then
		args+=(/admin)
	fi
	if [[ $arg_vm_id ]]; then
		args+=(/vmconnect:"$arg_vm_id")
	fi
	args+=(/v:"$host" "$@")
fi

getcred_var "$host" "tsclient" "Remote Desktop" user pass || exit

debug "got creds: '$user' '$pass'"

if (( use_rdesktop )); then
	[[ $user ]] && args+=(-u "$user")
	[[ $pass ]] && args+=(-p "$pass")
else
	[[ $user ]] && args+=(/u:"$user")
	[[ $pass ]] && args+=(/p:"$pass")
fi

debug "running command: ${args[*]}"

#if s=$("${args[@]}" 2>&1); then
if echo y | "${args[@]}"; then
	exit
else
	r=$?
	n=$'\n'
	m=''
	if (( use_rdesktop )); then
		case $r in
		0|1|2|3|4|5|11|62)
			exit 0;;
		6)	m='Server is out of memory';;
		7)	m='Server denied the connection';;
		8)	m='Server denied the connection for security reasons';;
		16)	m='Internal licensing error';;
		17)	m='No license server available';;
		18)	m='No valid license available';;
		esac
	else
		case $r in
		1)	m='Disconnected by administrative tool'; r=0;;
		5)	m='Attached from elsewhere'; r=0;;
		11)	m='Disconnected by...'; r=0;;
		12)	m='Logoff?'; r=0;;
		esac
	fi
	if [[ $s ]]; then
		m+="${n}stderr: ${s}"
	fi
	if (( r > 0 )); then
		zenity --error \
			--text "Remote Desktop connection failed (${r}):${n}${n}${m}"
	fi
	exit $r
fi &

if (( ! arg_fork )); then
	wait $!
fi
